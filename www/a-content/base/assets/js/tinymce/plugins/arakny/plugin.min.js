/**
 * TinyMCE - Arakny Plugin
 *
 * @author      Lucas Choi <eterv@naver.com>
 * @link        http://arakny.com
 * @package     Arakny
 */
(function () {
var arakny = (function () {
	'use strict';

	var pluginName = 'arakny';
	var global = tinymce.util.Tools.resolve('tinymce.PluginManager');

	var register = function (editor) {
		editor.addCommand('InsertHorizontalRule', function () {
			editor.insertContent('<hr />');
		});
	};
	var Commands = { register: register };

	global.add(pluginName, function (editor) {
		Commands.register(editor);

		var aImageUploaderSelector = editor.getParam('ai_image_uploader_selector');
		//var aImageUploaderOptions = editor.getParam('ai_image_uploader_options');
		var aImageUploaderOptions = {
			pageId: editor.getParam('ai_page_id'),
			urlUpload: editor.getParam('images_upload_url'),
			onApprove: function (code, list) {
				editor.insertContent(code);
			}
		};

		var insertImage = function () {
			/*
			var eFile = document.createElement('input');
			eFile.type = 'file';
			eFile.accept = 'image/*';
			eFile.multiple = true;

			eFile.addEventListener('change', function () {
				countUploadFiles = this.files.length;
				if (! dimmer.classList.contains('active')) dimmer.classList.add('active');

				for (var file, i = 0; i < this.files.length; i++) {
					file = this.files[i];
					//alert(file.name + ' ' + file.type + ' ' + file.size);

					if (file.size > obj.options.maxFileSize) {
						alert('[' + file.name + '] file is too big. You can\'t upload this file.');
						continue;
					}

					_uploadFile(file);
				}
			});

			eFile.dispatchEvent(new MouseEvent('click'));*/

			var aImageUploader = new AImageUploader(aImageUploaderSelector, aImageUploaderOptions);
			aImageUploader.show();
		};

		editor.ui.registry.addButton(pluginName + 'image', {
			tooltip: 'Arakny - Insert Image',
			text: '<i class="images icon" style="font-family: Icons; font-size: 16px;"></i>',
			onAction: function () {
				insertImage();
				//return editor.execCommand('InsertHorizontalRule');
			}
		});
		editor.ui.registry.addMenuItem(pluginName + 'image', {
			icon: 'horizontal-rule',
			text: 'Horizontal line',
			onAction: function () {
				return editor.execCommand('InsertHorizontalRule');
			}
		});

		editor.on('NodeChange', function (e) {
			//alert('NodeChange!');
		});

	});
	function Plugin () {
	}

	return Plugin;

}());
})();
